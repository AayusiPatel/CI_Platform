@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using CI_Platform.Entities.ViewModels
@model ShareStory

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js" integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofN4zfuZxLkoj1gXtW8ANNCe9d5Y3eG5eD" crossorigin="anonymous"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">

<script src="https://cdn.ckeditor.com/4.20.2/standard/ckeditor.js"></script>


<style>
    #uploaded-images {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 20px;
    }

        #uploaded-images img {
            max-width: 200px;
            max-height: 200px;
            margin-right: 10px;
            margin-bottom: 10px;
        }

    #drop-zone {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        font-size: 20px;
        margin-bottom: 20px;
    }





    .tox-notifications-container {
        display: none !important;
    }

    .file {
        width: 100%;
        height: 100%;
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }

    output {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: flex-start;
        flex-wrap: wrap;
        gap: 15px;
        position: relative;
        border-radius: 5px;
    }

        output .image {
            height: 100%;
            border-radius: 5px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            position: relative;
        }

            output .image img {
                height: 75px;
                width: 75px;
            }

            output .image span {
                position: absolute;
                top: -4px;
                right: 4px;
                cursor: pointer;
                font-size: 22px;
                color: white;
            }

                output .image span:hover {
                    opacity: 0.8;
                }

        output .span--hidden {
            visibility: hidden;
        }
</style>

<title>Share your Story</title>


<hr />

<div class="container">

    <div class="row">
        <form method="post" enctype="multipart/form-data">
            <div class="col-12">
                <div class="row">
                    <div class="col-lg-12">
                        <h1 class="story">Share your story</h1>
                    </div>
                </div><br>
                <div class="row">
                    <div class="col-lg-4">
                        <label for="select mission">
                            Select Mission
                        </label>
                        <div class="col-lg-12">
                            <select class="form-select" id="getData" aria-label="Default select example"
                                    asp-for="MissionId" aria-placeholder="Select your mission" onchange="Sdata();">
                                <option value="0">Select your mission</option>
                                @foreach (var obj in Model.missions)
                                {
                                    <option value="@obj.Mission.MissionId">  @obj.Mission.Title </option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label for="select mission">
                            My Story Title
                        </label>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <input type="text" class="form-control" asp-for="Stitle" id="formGroupExampleInput" placeholder="Enter story title">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <label for="select mission">
                            Date
                        </label>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <input type="date" id="sDate" asp-for="PublishedAt" class="form-control">
                            </div>
                        </div>
                    </div>
                </div><br>
                <div class="row">
                    <div class="col-lg-12">
                        My Story
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <textarea asp-for="Sdescription" name=Sdescription id="editor"></textarea>
                        <script>
                            CKEDITOR.replace('Sdescription');
                        </script>
                        @*  <script>
                            ClassicEditor
                            .create(document.querySelector('#editor'))
                            .catch(error => {
                            console.error(error);
                            });
                            </script>*@
                    </div>
                </div><br>
                <div class="row">
                    <div class="col-lg-12">
                        Enter Video URL
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <input type="text" asp-for="url" class="form-control" id="sUrl" placeholder="Enter your url">
                        </div>
                    </div>
                </div><br>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label class="form-label">Upload Your Photos</label>
                            <div class="d-flex justify-content-center align-items-center border input-div position-relative" style="height:150px">


                                <input id="imageupload" type="file" asp-for="file" class="file" accept="image/jpeg, image/png, image/jpg" multiple /><img src="~/img/drag-and-drop.png">

                            </div>
                        </div>

                    </div>

                    <output class="mt-3" id="preview"></output>

                </div><br>
                <div class="row">
                    <div class="col-lg-6 col-md-3 col-2">
                        <button type="submit" value="3" name="command" class="cancell rounded-pill btn btn-outline-dark">Cancel</button>
                    </div>
                    <div class="col-lg-6 col-md-9 col-10 text-end">

                        <button type="submit" class="threebt rounded-pill btn btn-outline-warning" value="1" name="command">Save</button>
                        <button type="submit" class="threebt rounded-pill btn btn-outline-warning" value="2" name="command">Submit</button>
                    </div>
                </div><br><br><hr>

            </div>
        </form>
    </div>
</div>

<script>

    const inputDiv = document.querySelector(".input-div")
     const input = document.querySelector("#imageupload")
     const output = document.querySelector("#preview")
     let imagesArray = []

     input.addEventListener("change", () => {

         const files = input.files
         for (let i = 0; i < files.length; i++) {
             imagesArray.push(files[i])
         }
         displayImages()
     })

     inputDiv.addEventListener("drop", () => {
         e.preventDefault()
         const files = e.dataTransfer.files
         for (let i = 0; i < files.length; i++) {
             if (!files[i].type.match("image")) continue;

             if (imagesArray.every(image => image.name !== files[i].name))
                 imagesArray.push(files[i])
         }
         displayImages()
     })
      function displayImages() {

         let images = ""
         imagesArray.forEach((image, index) => {
             images += `<div class="image storyimages">
                                         <img src="${URL.createObjectURL(image)}" alt="image">
                                         <span onclick="deleteImage(${index})">&times;</span>
                                       </div>`
         })
         output.innerHTML = images
     }

     function deleteImage(index) {
         imagesArray.splice(index, 1)
         displayImages()
     }

</script>


<script>
    function Sdata(){
      var div1 = document.getElementById("getData");
         var selectedOption = div1.options[div1.selectedIndex];
    var selectedValue = selectedOption.value;

     console.log(selectedValue);


    $.ajax({
        type: "POST", // POST
        url: '/Story/CheckData',
        data: {
            'mid': selectedValue,

        },

        success: function (data) {

             console.log(data);

              data = JSON.parse(data);

             console.log(data);
             if(data != null){
              {
                  let myDateObj = new Date(data.story.PublishedAt);
                    const year = myDateObj.getFullYear();
                    const month = String(myDateObj.getMonth() + 1).padStart(2, '0');
                        const day = String(myDateObj.getDate()).padStart(2, '0');
                            const formattedDate = `${year}-${month}-${day}`;

                                  data.PublishedAt = formattedDate;



                // The data exists, so populate the form with the retrieved data
                $("#formGroupExampleInput").val(data.story.Title);

                $("#sDate").val(data.PublishedAt);
                 $("#sUrl").val(data.url);
                console.log(data.displayImages);

                       if(data.displayImages != null){


                       //    $("#preview").empty();
                       //    data.displayImages.forEach((image, index) => {

                       //       var imageDiv = document.createElement('div');
                       //       imageDiv.className = 'image storyimages';
                       //       var imageContainer = document.getElementById('preview');
                       //        imageContainer.appendChild(imageDiv);

                       //           var img = document.createElement('img');
                       //           img.src = "/img/" + image ;

                       //            imageDiv.appendChild(img);

                       //            //var mySpan = document.createElement('span');
                       //            // mySpan.addEventListener('click', deleteImage(index));
                       //            //     imageDiv.appendChild(mySpan);

                       //           });



                                 //imagesArray = [];
                                 //for (var i = 0; i < data.displayImages; i++){
                                 //    debugger
                                 // imagesArray.push(data.displayImages[i]);
                                 // debugger
                                 // console.log(data.displayImages[i]);
                                 // debugger
                                 // }
                                 // console.log(imagesArray);

                                 /////////////////////////////////////////////////////////////////////////////////////////
                                   function toDataUrl(url, callback) {
                                    console.log(url);
                                var newUrl = url;
                                var xhr = new XMLHttpRequest();
                                xhr.onload = function() {
                                    callback(xhr.response);

                                };
                                xhr.open('GET', newUrl);

                                xhr.responseType = 'blob';
                                xhr.send();
                            }


                            function rtType(filename){
                                var x= filename.split(".");
                                return x[0]
                            }


                            const dT = new DataTransfer();

                            let image;
                                 /////////////////////////////////////////////////////////////////////////////////////
                                   let images = ""
                                  data.displayImages.forEach((img, index) => {
                                      /////////////////////////////////////////////////////////////////////////////
                                       img = "/img/" + img;
        toDataUrl(img,function(x){
            image = x;


            dT.items.add(new File([image], "myfile.png", {
                type: "image/png"
            }));
            imagesArray.push(new File([image], "myfile.png", {
                type: "image/png"
            }));
            //console.log("image: ", dT);

        //document.querySelector('#imageupload').files = dT.files;
        });
        console.log(imagesArray);
                                      ////////////////////////////////////////////////////////////////////////////
                                    images += `<div class="image">
                                                <img src="${img}" alt="image">
                                                <span onclick="deleteImage(${index})">&times;</span>
                                              </div>`

                                  })
                                  output.innerHTML = images;
                                   function deleteImage(index) {
                             imagesArray.splice(index, 1)
                                    displayImages()
                                          }
                             }
                             else{
                                 output.innerHTML = "No Images Are Choosen";
                             }


                               CKEDITOR.instances.editor.setData(data.story.Description);

            debugger

            }
            }
            else{
                 $("#formGroupExampleInput").val("");

                $("#sDate").val("");
                 $("#sUrl").val("");
                  output.innerHTML = "No Images Are Choosen";
                 CKEDITOR.instances.editor.setData("");
            }

        },
        error: function (e) {


            alert('Error');
        },
    });



    }

</script>